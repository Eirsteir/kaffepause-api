version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  local_neo4j_data: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: kaffepause_local_django
    container_name: django
    depends_on:
      - postgres
      - neo4j
    volumes:
      - .:/app:z
    env_file:
      - .env
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
      - ./.envs/.local/.neo4j
    ports:
      - "8000:8000"
    command: /start

  neo4j:
    image: neo4j:5.4-enterprise
    container_name: neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"
      - "7687:7687"
    expose:
      - 7474
      - 7687
    volumes:
      - local_neo4j_data:/data
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - dbms.connector.bolt.listen_address=:7687
      - dbms.connector.bolt.advertised_address=:7687
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_PLUGINS=["apoc"]
    env_file:
      - ./.envs/.local/.neo4j

  postgres:
    build:
      context: .
      dockerfile: compose/local/postgres/Dockerfile
    image: kaffepause_production_postgres
    container_name: postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres

  prisma-studio:  # Add to production.yml
    container_name: prisma-studio
    image: timothyjmiller/prisma-studio:latest
    restart: unless-stopped
    ports:
      - 5555:5555
    env_file:
      - ./.envs/.local/.postgres
